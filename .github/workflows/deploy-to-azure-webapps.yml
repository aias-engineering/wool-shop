name: Build and Deploy to Test

on: push

permissions:
  contents: read

jobs:
  build-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend.net/api
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Test with dotnet
        run: dotnet test

      - name: dotnet publish
        run: dotnet publish -c Release -o dist

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: woolshop-backend.net-api
          path: backend.net/api/dist

  deploy-backend:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: woolshop-backend.net-api

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'tapi0jxc3reuapiywm'
          publish-profile: ${{ secrets.AZURE_API_PUBLISH_PROFILE }}

  build-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    defaults:
      run:
        working-directory: ./frontend.react/app
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - run: npm ci

      - run: npm run build --if-present

      - run: npm test

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'tas0jxc3reuapiywm'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
